import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import {client} from './_app';
import type { Post as PostType }  from '../utils/types';
import { GET_POSTS } from '../utils/queries';
import Postinput from '../components/Postinput/Postinput';
import { useMemo, useState } from 'react';
import { Category } from '../utils/types';
import { unstable_getServerSession } from 'next-auth';
import {options} from '../pages/api/auth/[...nextauth]';
import { ComplexSession } from '../utils/types';
import Postlist from '../components/Postlist/Postlist';

export interface HomeProps { 
  posts: PostType[],
  usersession: ComplexSession
}

const filter = (posts: PostType[], category: Category) => {
  if(category === Category.ALL) return posts;
  return posts.filter((post) => post.category === category);
}

const Home: NextPage<HomeProps> = ({ posts, usersession }: HomeProps) => {
  const [category, setCategory] = useState(Category.ALL);
  const filteredPosts = useMemo(() => filter(posts, category), [category, posts]);

  return (
    <div className={styles.body}>
      <Head>
        <title>Next Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Postinput session={usersession}/>
      <div className={styles.container}>
        <div className={styles.sidebarcontainer}>
          { Object.values(Category).map((key) => (
            <h3 onClick={() => setCategory(key)} 
              key={key}
              className={(category===key ? styles.selected : '') }>
                {key}
              </h3>
          ))}
        </div>

        <Postlist posts={filteredPosts}/>
      </div>
    </div>
  )
}

export const getServerSideProps: GetServerSideProps =  async (context) => {
  const { data } = await client.query({query: GET_POSTS});
  const session = await unstable_getServerSession(context.req, context.res, options);
  return {
    props: {
      posts: data.getPosts,
      usersession: session,
    }
  }
}

export default Home;
